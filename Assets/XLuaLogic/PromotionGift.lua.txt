require('Define');
PromotionGift = {  }
local this = PromotionGift;

local gameObject;
local transform;
local EndTime;
local PurchaseButtons = {};

function PromotionGift.awake(obj)
    gameObject = obj;
    transform = obj.transform;
end

function PromotionGift.start()

    transform:Find("Panel/Close"):GetComponent(typeof(CS.UnityEngine.UI.Button)).onClick:AddListener(
            function()
                CS.UnityEngine.Object.Destroy(gameObject);
            end);

    CSXLua.Util.ServerTime:ObserveCountDown(EndTime, this.CalculateCountDown, this.OnExpired, gameObject)
end

function PromotionGift.CalculateCountDown(leftTime)
    local countDownTxt = transform:Find("Panel/CountDown"):GetComponent(typeof(CS.UnityEngine.UI.Text));
    countDownTxt.text = CSXLua.LongExtension.DateTimeTextMaxWithHour(leftTime)
end

function PromotionGift.OnExpired()
    
    local expiredHintObj = transform:Find("Panel/Expired").gameObject;
    expiredHintObj:SetActive(true);

    for i = 1, #PurchaseButtons do
        PurchaseButtons[i].interactable = false;
    end
end

function PromotionGift.ondestroy()

    print("on destory")
end

function PromotionGift:Show(json)
    print(json)
    local data = Rapidjson.decode(json);
    local skus = data.skus;
    require("PromotionItem")
    require("PromotionItemView")

    if CS.UnityEngine.Application.isEditor then
        EndTime = data.end_time + CSXLua.Util.ServerTime.Now;
    else
        EndTime = data.end_time;
    end

    for i = 1, #skus do
        local j = i;
        local itemData = skus[j];
        local item = PromotionItem:New(itemData);

        local itemObj = transform:Find("Panel/Item" .. j).gameObject;
        local itemView = PromotionItemView:Init(itemObj);

        local purchaseBtn = itemObj.transform:GetComponentInChildren(typeof(CS.UnityEngine.UI.Button))
        PurchaseButtons[#PurchaseButtons + 1] = purchaseBtn;
        itemView:SetData(item)
    end
end